version: '3.9'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=meme_db
    expose:
      - 5432

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    expose:
      - 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    expose:
      - 9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  minio:
    image: minio/minio
    container_name: minio
    command: server --console-address ":9001" /data
    expose:
      - 9000
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}

  api_service:
    container_name: api_service
    command: bash -c "cd /app && mkdir media && poetry run server"
    build:
      context: ./ApiMicroservice
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./ApiMicroservice/.env
    depends_on:
      - postgres
      - kafka

  file_service:
    container_name: file_service
    command: bash -c "cd /app && poetry run server"
    build:
      context: ./FileMicroservice
      dockerfile: Dockerfile
    expose:
      - 5000
    env_file:
      - ./FileMicroservice/.env
    depends_on:
      - minio
      - zookeeper
      - kafka
      - api_service
